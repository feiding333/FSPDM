% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Fitting_algorithm.R
\name{train_function}
\alias{train_function}
\title{Main fitting algorithm of FSPDM method}
\usage{
train_function(Data_generated, Eig_num, k, beta, theta, sigma2,
  lambda1 = 0, lambda2 = 0, lambda3 = 0, lambda4 = 0,
  testIndexes = NULL, sigma2_list = NULL, maxout = 1)
}
\arguments{
\item{Data_generated}{a list constaining the observed value of functional data, covariates and penalty matrix}

\item{Eig_num}{the number of eigenfunction users want to use}

\item{k}{dimension of spline basis with respect to covariate in eigenfunctions}

\item{beta}{the start point of beta parameters, can be set with all zeros}

\item{theta}{the start point of theta parameters, can be set with all zeros}

\item{sigma2}{the start point of sigma2 parameters, can be set with small positive value}

\item{lambda1}{the tuning parameters of smoothness penalty with respect to t in mean function}

\item{lambda2}{the tuning parameters of smoothness penalty with respect to covariate in mean function}

\item{lambda3}{the tuning parameters of smoothness penalty with respect to t in eigenfunction}

\item{lambda4}{he tuning parameters of smoothness penalty with respect to covariate in eigenfunction}

\item{testIndexes}{test Index if use cv}

\item{sigma2_list}{measurement error if have}

\item{maxout}{algorithm setting, default 1}
}
\value{
a list constains all estimator of SFPDM method
}
\description{
Main fitting algorithm of FSPDM method
}
\examples{
tmin = 0 # the start point of the curve
tmax = 1 # the end point of the curve, i.e. the cuvre's regin is from tmin to tmax
ymin = 0 # the minimum of the covariates
ymax = 1 # the maximum of the covariate
num_bin = 20 # number of bin in initial steps of our algorithm
order = 4 # spline order
nknots =8 # number of knots
splineObj_t = new(orthoSpline,tmin,tmax,order,nknots)
# degree freedom of spline basis
M1 = splineObj_t$getDoF()
## basis with respect to y to get the tensor product basis
yknots = 3
splineObj_y = new(orthoSpline,ymin,ymax,order,(yknots))
# degree freedom of spline basis
M2 = splineObj_y$getDoF()
## basis with d that is in matrix C
# basis with respect y (d^T), in C matrix
dknots = 5
splineObj_d = new(orthoSpline,ymin,ymax,order,dknots)
# degree freedom of spline basis
M3 = splineObj_d$getDoF()
k = M3
Spline_func = c(splineObj_t,splineObj_d,splineObj_y)
## set the number of principle components
Eig_num = r =  3
## the the number of spline basis used
## spline basis for t
M1 = 10
M2 = 5
M3 = k = 7
theta = rep(0,M1*M2)
sigma2 = 0.01
beta = rep(0,r*M1*M3)
parameter_best = train_function (Data_generated = Data_generated,Eig_num = Eig_num,k = k, beta = beta,theta = theta,sigma2 = sigma2)
}
